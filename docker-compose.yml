services:
  no0:
    image: anel_em:0.1
    command: python3 -u no.py 0 5 no0 5000 6000 no1 6001
    networks:
      - ring_network

  client0:
    image: anel_em:0.1
    command: python3 -u client.py no0 5000
    depends_on:
      - no0
    networks:
      - ring_network



  no1:
    image: anel_em:0.1
    command: python3 -u no.py 1 5 no1 5001 6001 no2 6002
    networks:
      - ring_network

  client1:
    image: anel_em:0.1
    command: python3 -u client.py no1 5001
    depends_on:
      - no1
    networks:
      - ring_network



  no2:
    image: anel_em:0.1
    command: python3 -u no.py 2 5 no2 5002 6002 no3 6003
    networks:
      - ring_network

  client2:
    image: anel_em:0.1
    command: python3 -u client.py no2 5002
    depends_on:
      - no2
    networks:
      - ring_network



  no3:
    image: anel_em:0.1
    command: python3 -u no.py 3 5 no3 5003 6003 no4 6004
    networks:
      - ring_network

  client3:
    image: anel_em:0.1
    command: python3 -u client.py no3 5003
    depends_on:
      - no3
    networks:
      - ring_network



  no4:
    image: anel_em:0.1
    command: python3 -u no.py 4 5 no4 5004 6004 no0 6000
    networks:
      - ring_network

  client4:
    image: anel_em:0.1
    command: python3 -u client.py no4 5004
    depends_on:
      - no4
    networks:
      - ring_network



networks:
  ring_network:
    driver: bridge
